<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<!-- 객체 선언 : 자동 생성 -->
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig" >
		
			<property name="driverClassName" 
			 value="oracle.jdbc.driver.OracleDriver" />
			<property name="jdbcUrl" 
			value="jdbc:oracle:thin:@localhost:1521:xe" />
		
	<!-- 	<property name="driverClassName" 
		 value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy" />
		<property name="jdbcUrl" 
		value="jdbc:log4jdbc:oracle:thin:@localhost:1521:xe" /> -->
		<property name="username" value="scott" />
		<property name="password" value="tiger" />
	</bean>
	
	<!-- 서버가 시작되면 Connection을 만들어서 DBCP에 넣어 둔다. : 속도 -->
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource"
	destroy-method="close" >
		<constructor-arg ref="hikariConfig" />
	</bean>
	
	<!-- Mybaits - DAO 코드 자동 생성 -->
	<!-- mapper Interface(메서드 이름) - mapper xml(sql) -->
	<bean id="sqlSessionFactory" 
	class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
		
	</bean>
	
	<!-- class나 method위에 @Transactional을 붙이기만 하면 그안에 있는 것을 트랜젝션 처리를 한다. -->
	<tx:annotation-driven/>
	
<!-- 	<aop:aspectj-autoproxy></aop:aspectj-autoproxy> -->
	
	<!-- dao(persitence) 자동으로 만들어 주기 위한 위치 -->
	<mybatis-spring:scan base-package="com.webjjang"/>
	
	<!-- @Service, @Repository, @Component등을 자동으로 생성해 주도록 scan하는 기본 패키지 선언 -->
	<context:component-scan base-package="com.webjjang">
	</context:component-scan>
	
</beans>
